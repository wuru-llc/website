---
interface Props {
  parallaxSpeed?: number;
}

const { parallaxSpeed = 1.5 } = Astro.props;
---

<div class="parallax-item" data-parallax-speed={parallaxSpeed}>
  <slot />
</div>

<script>
  function initParallaxObserver() {
    const items = document.querySelectorAll(".parallax-item");

    const updateParallax = () => {
      const scrollY = window.scrollY;

      items.forEach((item) => {
        if (item instanceof HTMLElement) {
          // Verificar si es un HTMLElement
          const parallaxSpeed = parseFloat(item.dataset.parallaxSpeed || "0.8");
          const offsetTop = item.getBoundingClientRect().top + scrollY; // Posición inicial
          const distance = scrollY - offsetTop;

          item.style.transform = `translateY(${distance * parallaxSpeed}px)`;
        }
      });
    };

    // Actualiza el efecto al desplazarse
    window.addEventListener("scroll", updateParallax);

    // Llamada inicial para aplicar la posición al cargar
    updateParallax();
  }

  document.addEventListener("astro:page-load", initParallaxObserver);
  initParallaxObserver();
</script>

<style>
  .parallax-item {
    width: 100%;
    will-change: transform;
    transition: transform 0.1s linear; /* Suavizar el movimiento */
  }
</style>
